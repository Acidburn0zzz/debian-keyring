#!/usr/bin/python3

import os
from os import path
import socket
from subprocess import run, PIPE
from shutil import copy
from distutils.dir_util import copy_tree
import sys

def check_environ(should_run_on='kaufmann.debian.org'):
    if not (os.environ.get('RUNANYWAY', False) or
            socket.getfqdn(socket.gethostname()) == should_run_on):
        raise Exception('''
This script is meant to be run in %s
You can still run it if you are sure by setting
$RUNANYWAY to a nonempty value.
        '''%(should_run_on))

def publish(srcdir,
            prefix=None):
    if prefix is None:
        prefix = os.environ.get('PREFIX', '/srv/keyring.debian.org')
    pendingdir=path.join(prefix, 'pending-updates')
    hkpdir=path.join(prefix, 'keyrings-new')
    outputdir=path.join(prefix, 'pub')
    for direc in [srcdir, pendingdir, hkpdir, outputdir]:
        if not path.isdir(direc):
            raise Exception("%s is not a directory"%(direc))
    srcdir = path.realpath(srcdir)
    sha512fname = path.join(srcdir, 'sha512sums.txt')
    if not path.exists(sha512fname):
        raise Exception('sha512sums.txt not found in %s'%(srcdir))
    placeholder = path.join(srcdir, 'keyrings', '.placeholder')
    if path.exists(placeholder):
        os.unlink(placeholder)
    gpgcall = ['gpg', '--batch', '--quiet', '--verify', sha512fname]
    run(gpgcall, check=True, stderr=PIPE)
    os.chdir(srcdir)
    sha512sumcall = ['sha512sum', '-c', 'sha512sums.txt']
    run(sha512sumcall, check=True)

    keyrings = ['keyring', 'maintainers', 'nonupload']
    for kname in keyrings:
        kfile = path.join(pendingdir, 'debian-%s.gpg'%(kname))
        if path.exists(kfile):
            raise Exception('Unhandled pending updates.\nKeyrings in %s should be dealt with and removed'%(pendingdir))

    for kname in keyrings:
        kfile = path.join(hkpdir, 'debian-%s.gpg'%(kname))
        copy(kfile, pendingdir)

    print('Updating active keyrings.')
    copy_tree(srcdir, outputdir)
    print('Updating HKP keyrings.')
    for kname in keyrings:
        kfile = path.join(srcdir, 'keyrings', 'debian-%s.gpg'%(kname))
        copy(kfile, hkpdir)
    

if len(sys.argv) != 2:
     raise Exception('Must provide directory containing new keyrings.')

check_environ()
publish(sys.argv[1])
